steps:
  - name: ubuntu
    args:
      - '-c'
      - |
        echo "###############################"
        echo $$PR_NUMBER
        echo
        ls -la
        echo "###############################"
        echo "export NEW_PR=$(echo $$PR_NUM)" >> /workspace/env.sh
        echo "export NEW_PRRRR=$(echo $_PRNUMBER)" >> /workspace/env.sh
        cat 
    id: echo
    entrypoint: bash
    
  - name: gcr.io/cloud-builders/gsutil
    args: ['cp','gs://gcf-v2-uploads-227553364515-europe-west1/token','.']
    id: token
    entrypoint: gsutil
            
  - id: changes
    name: gcr.io/proud-gate-400110/gh:1
    entrypoint: /bin/bash
    args:
      - -c
      - |
        . /workspace/env.sh
        envExporter(){
          echo "$1" >> /workspace/env.sh
        }
        formating() {
          msg=$1
          echo "###################################"
          echo $msg
          echo "###################################"
        }
        . /workspace/env.sh
        echo "========================"
        echo $$PR_NUMBER
        formating "echo changes files"
        cat changes.text
        formating 'Getting changed files'
        cat token | gh auth login --with-token
        gh pr diff $$PR_NUMBER --name-only > changes.text
        awk -F '/' 'NR==1 {print $2}' changes.text
        formating 'Check changed instances'
        check_changed_project=$(awk -F '/' '{print $2}' changes.text | uniq -c | wc -l)
        if [ $check_changed_project -eq 1 ]; then 
          echo "one chnaged project"
          echo "export INSTANCE=$(awk -F '/' '{print $2}' changes.text)" >> /workspace/env.sh
        else
          echo "you make chnages in more than one instance"
          ./scripts/awk.sh  
        fi

        formating 'Check changed projects in the instance'
        pr_chnages="changes.text"
        check_live=$(grep -cw 'live' "$pr_chnages")
        check_nl=$(grep -cw 'nonlive' "$pr_chnages")
        check_lab=$(grep -cw 'lab' "$pr_chnages")
        cat changes.text
        echo "========================"
        if [ $check_live -eq 0 ]; then
            check_live=0
        else
            check_live=1
        fi
        if [ $check_nl -eq 0 ]; then
            check_nl=0
        else
            check_nl=1
        fi
        if [ $check_lab -eq 0 ]; then
            check_lab=0
        else
            check_lab=1
        fi
        echo "========================"
        
        echo $check_live
        echo $check_nl
        echo $check_lab
        all_checks=$((check_live + check_nl + check_lab))
        echo "========================"
        if [ $all_checks -eq 1 ]; then
            if [ $check_live -eq 1 ]; then
                envExporter "export TF_VAR_env_sub_folder=live"
            elif [ $check_nl -eq 1 ]; then
                envExporter "export TF_VAR_env_sub_folder=nl"
            elif [ $check_lab -eq 1 ]; then
                envExporter "export TF_VAR_env_sub_folder=lab"
            fi
        else
          echo "Multibale changes found"
          ./scripts/awk.sh        
        fi
        echo "========================"
        formating 'Exporting terraform needed variables'
        envExporter "export TF_VAR_env="dev"" >> /workspace/env.sh
        envExporter "export TF_VAR_env_folder="beta"" >> /workspace/env.sh
        echo "export INSTANCE=$(awk -F '/' 'NR==3 {print $2}' changes.text)" >> /workspace/env.sh

    
logsBucket: 'gs://proud-gate-400110-logging'
substitutions:
  _ACTION: $(body.action)
  _PRNUMBER: $(body.number)
  _SHNUM: $(body.pull_request.head.sha)
  _CHANGED_FILES: $(body.pull_request.changed_files)

 
options:
  substitution_option: ALLOW_LOOSE
  env:
    - PR_NUMBER=$_PRNUMBER
serviceAccount: "cloudrun@proud-gate-400110.iam.gserviceaccount.com"